description: 'Defines a module named `inverseMixColumns`, which is a crucial part
  of the AES (Advanced Encryption Standard) decryption process. The `inverseMixColumns`
  function is the inverse operation of the `mixColumns` transformation used in AES
  encryption rounds, designed to operate on the state array and reverse the mixing
  effect applied during encryption. Inputs and Outputs: Input: `state_in` - A 128-bit
  input representing the state array that has been transformed during the encryption
  process. Output: `state_out` - A 128-bit output representing the restored state
  array after the inverseMixColumns operation. Functionality: The `inverseMixColumns`
  operation treats each column of the state as a four-term polynomial over the finite
  field GF(2^8) and multiplies it modulo `x^4 + 1` with a fixed polynomial used for
  the inverse operation in AES decryption. Key Components: Multiplication Functions:
  The module defines functions to multiply a byte by `{0e}`, `{0d}`, `{0b}`, and `{09}`
  in the finite field GF(2^8), which are necessary for the inverse mix columns polynomial
  in AES decryption. These functions utilize a `multiply` function to perform the
  multiplication by repeatedly applying multiplication by `{02}` (left shift and conditional
  XOR with 0x1b for finite field reduction). The multiply function takes an input
  byte `x` and an integer `n`, representing the number of times to multiply `x` by
  `{02}`.'
interface: module inverseMixColumns(input [127:0] state_in, output [127:0] state_out);
